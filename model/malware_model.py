import numpy as np
import os
import joblib
from tensorflow.keras.models import load_model

class MalwareDetector:
    def __init__(self):
        model_path = os.path.join(os.path.dirname(__file__), "binary_classification_model.keras")
        scaler_path = os.path.join(os.path.dirname(__file__), "scaler.pkl")

        self.model = load_model(model_path)
        self.scaler = joblib.load(scaler_path)

    def predict(self, raw_data):
        features = np.char.strip(raw_data).astype(float)
        normalized_features = self.scaler.transform(features)
        predictions = self.model.predict(normalized_features)
        binary_predictions = (predictions > 0.5).astype(int).flatten()
        labels = np.where(binary_predictions == 1, "Malicious", "Benign")
        return predictions, binary_predictions, labels