import os
import pandas as pd
import numpy as np
from tensorflow.keras.models import load_model

class MalwareDetector:
    def __init__(self):
        BASE_DIR = os.path.dirname(os.path.abspath(__file__))
        model_path = os.path.normpath(os.path.join(BASE_DIR, "../model/ShadowSnare_Model.keras"))
        self.model = load_model(model_path)

        self.selected_features = [
            'pslist.nproc', 'pslist.nppid', 'pslist.avg_threads', 'pslist.nprocs64bit', 'pslist.avg_handlers',
            'dlllist.ndlls', 'dlllist.avg_dlls_per_proc',
            'handles.nhandles', 'handles.nport', 'handles.nfile', 'handles.nevent', 'handles.ndesktop',
            'handles.nkey', 'handles.nthread', 'handles.ndirectory', 'handles.nsemaphore', 'handles.ntimer',
            'handles.nsection', 'handles.nmutant',
            'ldrmodules.not_in_load', 'ldrmodules.not_in_init', 'ldrmodules.not_in_mem',
            'ldrmodules.not_in_load_avg', 'ldrmodules.not_in_init_avg', 'ldrmodules.not_in_mem_avg',
            'malfind.ninjections', 'malfind.commitCharge', 'malfind.protection', 'malfind.uniqueInjections',
            'modules.nmodules', 'svcscan.nservices', 'svcscan.kernel_drivers', 'svcscan.fs_drivers',
            'svcscan.process_services', 'svcscan.shared_process_services', 'svcscan.interactive_process_services',
            'svcscan.nactive', 'callbacks.ncallbacks', 'callbacks.nanonymous', 'callbacks.ngeneric',
            'psxview.not_in_pslist', 'psxview.not_in_eprocess_pool', 'psxview.not_in_csrss_handles',
            'psxview.not_in_pslist_false_avg', 'psxview.not_in_eprocess_pool_false_avg', 'psxview.not_in_csrss_handles_false_avg'
        ]

    def predict(self, df: pd.DataFrame):
        features_df = df[self.selected_features].astype(float)
        probabilities = self.model.predict(features_df)
        binary_preds = (probabilities > 0.5).astype(int).flatten()
        labels = np.where(binary_preds == 1, "Malware", "Benign")
        return probabilities, binary_preds, labels, features_df

